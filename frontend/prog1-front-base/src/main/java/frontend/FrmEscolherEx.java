/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import entities.Exercicio;
import entities.Musculo;
import entities.Treino;
import javax.swing.JOptionPane;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

/**
 *
 * @author marco
 */
public class FrmEscolherEx extends javax.swing.JFrame {

    /**
     * Creates new form FrmEscolherEx
     */
    public FrmEscolherEx() {
        initComponents();
        loadExercicios();
    }
    
    
    private Long escolha=0l;

    public Long getEscolha() {
        return escolha;
    }

    public void setEscolha(Long escolha) {
        this.escolha = escolha;
    }
    
     public void loadExercicios() {
        RestTemplate req = new RestTemplate();
        
        ResponseEntity<Exercicio[]> response = req.getForEntity(
            "http://localhost:8080/exercicios", Exercicio[].class);

        Exercicio[] exercicios = response.getBody();
        for (var exercicio : exercicios) {
            cbEscolherEx.addItem(exercicio.toString());
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbEscolherEx = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        numeroSeries = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        repSerie1 = new javax.swing.JSpinner();
        repSerie2 = new javax.swing.JSpinner();
        repSerie3 = new javax.swing.JSpinner();
        repSerie4 = new javax.swing.JSpinner();
        repSerie5 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cargaSerie1 = new javax.swing.JTextField();
        cargaSerie2 = new javax.swing.JTextField();
        cargaSerie3 = new javax.swing.JTextField();
        cargaSerie4 = new javax.swing.JTextField();
        cargaSerie5 = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Escolha de exercício");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Escolha o exercíco"));

        cbEscolherEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEscolherExActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbEscolherEx, 0, 203, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbEscolherEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Séries"));

        numeroSeries.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numeroSeries)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(numeroSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Repetições e carga"));

        repSerie1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 40, 1));
        repSerie1.setEnabled(false);
        repSerie1.setMinimumSize(null);
        repSerie1.setPreferredSize(new java.awt.Dimension(70, 24));

        repSerie2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 40, 1));
        repSerie2.setEnabled(false);
        repSerie2.setPreferredSize(new java.awt.Dimension(70, 24));

        repSerie3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 40, 1));
        repSerie3.setEnabled(false);
        repSerie3.setPreferredSize(new java.awt.Dimension(70, 24));

        repSerie4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 40, 1));
        repSerie4.setEnabled(false);
        repSerie4.setPreferredSize(new java.awt.Dimension(70, 24));

        repSerie5.setModel(new javax.swing.SpinnerNumberModel(0, 0, 40, 1));
        repSerie5.setEnabled(false);
        repSerie5.setPreferredSize(new java.awt.Dimension(70, 24));

        jLabel1.setText("Série 1");

        jLabel2.setText("Série 2");

        jLabel3.setText("Série 3");

        jLabel4.setText("Série 4");

        jLabel5.setText("Série 5");

        cargaSerie1.setText("0");
        cargaSerie1.setEnabled(false);
        cargaSerie1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaSerie1ActionPerformed(evt);
            }
        });

        cargaSerie2.setText("0");
        cargaSerie2.setEnabled(false);

        cargaSerie3.setText("0");
        cargaSerie3.setEnabled(false);

        cargaSerie4.setText("0");
        cargaSerie4.setEnabled(false);

        cargaSerie5.setText("0");
        cargaSerie5.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cargaSerie1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(repSerie1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(repSerie2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cargaSerie2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(repSerie3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(cargaSerie3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel5))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cargaSerie4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(repSerie4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(repSerie5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cargaSerie5))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repSerie1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repSerie2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repSerie3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repSerie4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repSerie5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargaSerie1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargaSerie2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargaSerie3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargaSerie4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargaSerie5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAdd.setText("Adicionar");
        btnAdd.setEnabled(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnOK)))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbEscolherExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEscolherExActionPerformed
        
    }//GEN-LAST:event_cbEscolherExActionPerformed

    private void addExercicio(int numeroExercicio){
        Exercicio exercicio = new Exercicio();
        exercicio.setSeries((int) numeroSeries.getValue());    
        exercicio.setRepeticoes(0, (int) repSerie1.getValue());
        exercicio.setRepeticoes(1, (int) repSerie2.getValue());
        exercicio.setRepeticoes(2, (int) repSerie3.getValue());
        exercicio.setRepeticoes(3, (int) repSerie4.getValue());
        exercicio.setRepeticoes(4, (int) repSerie5.getValue());
        exercicio.setCarga(0, Float.parseFloat(cargaSerie1.getText()));
        exercicio.setCarga(1, Float.parseFloat(cargaSerie2.getText()));
        exercicio.setCarga(2, Float.parseFloat(cargaSerie3.getText()));
        exercicio.setCarga(3, Float.parseFloat(cargaSerie4.getText()));
        exercicio.setCarga(4, Float.parseFloat(cargaSerie5.getText()));

        float maior = Float.parseFloat(cargaSerie1.getText());
        if(Float.parseFloat(cargaSerie1.getText()) > Float.parseFloat(cargaSerie2.getText()) &&
           Float.parseFloat(cargaSerie1.getText()) > Float.parseFloat(cargaSerie3.getText()) &&
           Float.parseFloat(cargaSerie1.getText()) > Float.parseFloat(cargaSerie4.getText()) &&
           Float.parseFloat(cargaSerie1.getText()) > Float.parseFloat(cargaSerie5.getText())){
            maior = Float.parseFloat(cargaSerie1.getText());
         }
        if(Float.parseFloat(cargaSerie2.getText()) > Float.parseFloat(cargaSerie1.getText()) &&
           Float.parseFloat(cargaSerie2.getText()) > Float.parseFloat(cargaSerie3.getText()) &&
           Float.parseFloat(cargaSerie2.getText()) > Float.parseFloat(cargaSerie4.getText()) &&
           Float.parseFloat(cargaSerie2.getText()) > Float.parseFloat(cargaSerie5.getText())){
           maior = Float.parseFloat(cargaSerie2.getText());
         }
        if(Float.parseFloat(cargaSerie3.getText()) > Float.parseFloat(cargaSerie1.getText()) &&
           Float.parseFloat(cargaSerie3.getText()) > Float.parseFloat(cargaSerie2.getText()) &&
           Float.parseFloat(cargaSerie3.getText()) > Float.parseFloat(cargaSerie4.getText()) &&
           Float.parseFloat(cargaSerie3.getText()) > Float.parseFloat(cargaSerie5.getText())){
            maior = Float.parseFloat(cargaSerie3.getText());
         }
        if(Float.parseFloat(cargaSerie4.getText()) > Float.parseFloat(cargaSerie1.getText()) &&
           Float.parseFloat(cargaSerie4.getText()) > Float.parseFloat(cargaSerie2.getText()) &&
           Float.parseFloat(cargaSerie4.getText()) > Float.parseFloat(cargaSerie3.getText()) &&
           Float.parseFloat(cargaSerie4.getText()) > Float.parseFloat(cargaSerie5.getText())){
            maior = Float.parseFloat(cargaSerie4.getText());
         }
        if(Float.parseFloat(cargaSerie5.getText()) > Float.parseFloat(cargaSerie1.getText()) &&
           Float.parseFloat(cargaSerie5.getText()) > Float.parseFloat(cargaSerie2.getText()) &&
           Float.parseFloat(cargaSerie5.getText()) > Float.parseFloat(cargaSerie3.getText()) &&
           Float.parseFloat(cargaSerie5.getText()) > Float.parseFloat(cargaSerie4.getText())){
            maior = Float.parseFloat(cargaSerie5.getText());
         }

         exercicio.setRecordeCarga(maior);
         RestTemplate req = new RestTemplate();

         Object item = cbEscolherEx.getSelectedItem();
         String itemSelecionado = item.toString();
         Musculo musculo;
         Exercicio exercicioSalvo;
         switch(itemSelecionado){
             case "Afundo": musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                            exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 1); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 1);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Agachamento búlgaro" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 2); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 2);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Agachamento livre" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 3); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 3);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Barra fixa" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 2);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 4); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 4);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Cadeira extensora" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 5); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 5);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Cadeira flexora" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 6); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 6);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Coice" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 7); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 7);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Cross-over polia alta" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 8); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 8);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Cross-over polia baixa" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 9); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 9);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Cross-over polia média" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 10); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 10);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Desenvolvimento halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 3);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 11); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 11);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Desenvolvimento militar" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 3);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 12); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 12);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Elevação frontal" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 3);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 13); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 13);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Elevação lateral halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 3);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 14); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 14);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Elevação lateral polia" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 3);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 15); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 15);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Elevação pélvica" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 16); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 16);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Gêmeos sentado" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 4);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 17); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 17);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Leg-press" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 18); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 18);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Levantamento terra" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 19); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 19);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Martelo halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 1);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 20); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 20);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Mesa flexora" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 21); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 21);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Panturrilha em pé" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 4);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 22); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 22);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Panturrilha leg-press" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 4);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 23); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 23);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Puxada frontal barra" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 2);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 24); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 24);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Puxada frontal triângulo" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 2);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 25); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 25);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Remada baixa" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 2);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 26); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 26);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Remada cavalinho" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 2);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 27); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 27);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Remada curvada" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 2);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 28); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 28);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Rosca banco inclinado" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 1);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 29); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 29);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Rosca concentrada" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 1);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 30); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 30);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
              case "Rosca direta barra" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 1);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 31); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 31);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
              case "Rosca direta halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 1);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 32); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 32);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
              case "Rosca Scott" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 1);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 33); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 33);
                            }
                            exercicio = req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Serrote" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 2);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 34); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 34);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Stiff" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 6);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 35); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 35);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Supino declinado barra" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 36); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 36);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Supino inclinado barra" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 37); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 37);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Supino inclinado halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 38); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 38);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Supino reto barra" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 39); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 39);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Supino reto halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 5);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 40); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 40);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Triceps frânces polia" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 7);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 41); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 41);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Triceps frânces halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 7);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 42); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 42);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Triceps pulley barra" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 7);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 43); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 43);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Triceps pulley corda" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 7);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 44); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 44);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Triceps testa halteres" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 7);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 45); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 45);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;
             case "Triceps testa polia" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 7);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 46); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 46);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class);
                            setEscolha(exercicio.getId());
             break;
             case "Voador inverso" : musculo = req.getForObject("http://localhost:8080/musculos/{id}", Musculo.class, 3);       
                            exercicio.setMusculo(musculo);
                            exercicio.setNome(itemSelecionado);
                             exercicioSalvo = req.getForObject("http://localhost:8080/exercicio/{id}", Exercicio.class, 47); 
                            if(exercicio.getRecordeCarga() > exercicioSalvo.getRecordeCarga()){
                                req.put("http://localhost:8080/exercicio/{id}", exercicio, 47);
                            }
                            exercicio =req.postForObject("http://localhost:8080/exercicios", exercicio, Exercicio.class); 
                            setEscolha(exercicio.getId());
             break;

         }
    }
    
    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        int nSerie = (int) numeroSeries.getValue();
        btnAdd.setEnabled(true);
        switch(nSerie){
            case 1 : repSerie1.setEnabled(true);
                     repSerie1.setValue(1);
                     repSerie2.setEnabled(false);
                     repSerie2.setValue(0);
                     repSerie3.setEnabled(false);
                     repSerie3.setValue(0);
                     repSerie4.setEnabled(false);
                     repSerie4.setValue(0);
                     repSerie5.setEnabled(false); 
                     repSerie5.setValue(0);
                     
                     cargaSerie1.setEnabled(true);
                     cargaSerie1.setText("");
                     cargaSerie2.setEnabled(false);
                     cargaSerie3.setEnabled(false);
                     cargaSerie4.setEnabled(false);
                     cargaSerie5.setEnabled(false); 
            break;
            case 2 : repSerie1.setEnabled(true);
                     repSerie1.setValue(1);
                     repSerie2.setEnabled(true);
                     repSerie2.setValue(1);
                     repSerie3.setEnabled(false);
                     repSerie3.setValue(0);
                     repSerie4.setEnabled(false);
                     repSerie4.setValue(0);
                     repSerie5.setEnabled(false); 
                     repSerie5.setValue(0);
                     
                     cargaSerie1.setEnabled(true);
                     cargaSerie1.setText("");
                     cargaSerie2.setEnabled(true);
                     cargaSerie2.setText("");
                     cargaSerie3.setEnabled(false);
                     cargaSerie4.setEnabled(false);
                     cargaSerie5.setEnabled(false);
                     
            break;
            case 3 : repSerie1.setEnabled(true);
                     repSerie1.setValue(1);
                     repSerie2.setEnabled(true);
                     repSerie2.setValue(1);
                     repSerie3.setEnabled(true);
                     repSerie3.setValue(1);
                     repSerie4.setEnabled(false);
                     repSerie4.setValue(0);
                     repSerie5.setEnabled(false); 
                     repSerie5.setValue(0);
                     cargaSerie1.setEnabled(true);
                     cargaSerie1.setText("");
                     cargaSerie2.setEnabled(true);
                     cargaSerie2.setText("");
                     cargaSerie3.setEnabled(true);
                     cargaSerie3.setText("");
                     cargaSerie4.setEnabled(false);
                     cargaSerie5.setEnabled(false);
            break;
            case 4 : repSerie1.setEnabled(true);
                     repSerie1.setValue(1);
                     repSerie2.setEnabled(true);
                     repSerie2.setValue(1);
                     repSerie3.setEnabled(true);
                     repSerie3.setValue(1);
                     repSerie4.setEnabled(true);
                     repSerie4.setValue(1);
                     repSerie5.setEnabled(false); 
                     repSerie5.setValue(0);
                     cargaSerie1.setEnabled(true);
                     cargaSerie1.setText("");
                     cargaSerie2.setEnabled(true);
                     cargaSerie2.setText("");
                     cargaSerie3.setEnabled(true);
                     cargaSerie3.setText("");
                     cargaSerie4.setEnabled(true);
                     cargaSerie4.setText("");
                     cargaSerie5.setEnabled(false);
            break;     
            case 5 : repSerie1.setEnabled(true);
                     repSerie1.setValue(1);
                     repSerie2.setEnabled(true);
                     repSerie2.setValue(1);
                     repSerie3.setEnabled(true);
                     repSerie3.setValue(1);
                     repSerie4.setEnabled(true);
                     repSerie4.setValue(1);
                     repSerie5.setEnabled(true); 
                     repSerie5.setValue(1);
                     cargaSerie1.setEnabled(true);
                     cargaSerie1.setText("");
                     cargaSerie2.setEnabled(true);
                     cargaSerie2.setText("");
                     cargaSerie3.setEnabled(true);
                     cargaSerie3.setText("");
                     cargaSerie4.setEnabled(true);
                     cargaSerie4.setText("");
                     cargaSerie5.setEnabled(true);
                     cargaSerie5.setText("");
            break;
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try{
            addExercicio(1);
            dispose();
        }catch (java.lang.NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Por favor, não deixe campos em branco");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        setEscolha(-1l);
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cargaSerie1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaSerie1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargaSerie1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEscolherEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEscolherEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEscolherEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEscolherEx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmEscolherEx().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOK;
    private javax.swing.JTextField cargaSerie1;
    private javax.swing.JTextField cargaSerie2;
    private javax.swing.JTextField cargaSerie3;
    private javax.swing.JTextField cargaSerie4;
    private javax.swing.JTextField cargaSerie5;
    private javax.swing.JComboBox<String> cbEscolherEx;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner numeroSeries;
    private javax.swing.JSpinner repSerie1;
    private javax.swing.JSpinner repSerie2;
    private javax.swing.JSpinner repSerie3;
    private javax.swing.JSpinner repSerie4;
    private javax.swing.JSpinner repSerie5;
    // End of variables declaration//GEN-END:variables
}
